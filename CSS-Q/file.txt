https://course.masaischool.com/assignments/11269/problem/25744
1) ---------------- #how to add comments on css?--------------------------
    Eg /* This is a single-line comment */
     To comment in CSS, simply place your plain text inside \* */ marks. This tells the           browser that they are notes and should not be rendered on the front end.
}



2)----------------------Why do we use pseudo-class?---------------------------
What are Pseudo-classes?
CSS pseudo-classes are used to add special effects to some selectors.


For example, it can be used to:

Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus




3)-------------------------How is specificity applied?------------------------------
If there are two or more CSS rules that point to the same element, the selector with the highest specificity value will "win", and its style declaration will be applied to that HTML element.
Think of specificity as a score/rank that determines which style declaration are ultimately applied to an element.

The amount of specificity a selector has is measured using four different values (or components), which can be thought of as thousands, hundreds, tens and ones — four single digits in four columns:

1000 - Inline/Style Tag
Hundreds - One for each ID Selector
Tens - One for each class selector, attribute selector, pseudo-class contained inside the overall selector.
Ones - One for each element selector, pseudo-element contained inside the overall selector.

| Selector                                | Thousands | Hundreds | Tens | Ones | Total |
| --------------------------------------- | --------- | -------- | ---- | ---- | ----- |
| h1                                      | 0         | 0        | 0    | 1    | 0001  |
| h1 + p                                  | 0         | 0        | 0    | 2    | 0002  |
| h1 + p::first-letter                    | 0         | 0        | 0    | 3    | 0003  |
| li > a[href*="en-US"] > .inline-warning | 0         | 0        | 2    | 2    | 0022  |
| .class1                                 | 0         | 0        | 1    | 0    | 0010  |
| ul.class1                               | 0         | 0        | 1    | 1    | 0011  |
| #id1                                    | 0         | 1        | 0    | 0    | 0100  |
| style                                   | 1         | 0        | 0    | 0    | 1000  |




4)-------------------What method allows an element to be moved from its current position?-------------------
The translate() method moves an element from its current position (according to the parameters given for the X-axis and the Y-axis).



5)-------------------------What properties does flex model have?-------------------------------------------------

-flex-wrap
By default, flex items will all try to fit onto one line. You can change that and allow the items to wrap as needed with this property.defsult is flex-wrap:wrap
-flex-flow
This is a shorthand for the flex-direction and flex-wrap properties, which together define the flex container’s main and cross axes. The default value is row nowrap.
-justify-content
The justify-content property is used to align the flex items along the main axis;
-align-items
The align-items property is used to align the flex items along the cross axis.





6)What is the difference between flex and grids?
 The basic difference between CSSgrid layout and Css flexbox layout is that the flexbox was 
 designed for layout  in one dimension whether it is in row or column while grid was designed for
 two dimensional layout rows column same time.




7)--------------------------Give an example where we have to use grids and where you have to use flexbox?------------------------------------
If i want to place my div in one direction whether in row or in column we will use flex there.whereas if i want to work in two dimentions then 
we will be using grid.



8)Give an example where you cannot use flexbox, and you can only use grids?
https://blog.logrocket.com/flexbox-vs-css-grid/
CSS Grids helps you create the outer layout of the webpage. You can build complex as well responsive design with this. This is why it is called ‘layout first’. While flexbox mostly helps align content & move blocks.

CSS grids are for 2D layouts. It works with both rows and columns.Flexbox works better in one dimension only (either rows OR columns).

You should consider flexbox when :

You have a small design to implement
You need to align elements
You need a content-first design
You should consider CSS grid when :

You have a complex design to implement
You need to have a gap between block elements
You need to overlap elements
You need a layout-first design




9)-------------------Give an example where you cannot use flexbox, and you can only use grids?----------------------------------------

If you have some complex layout as this wherein you want to layout in different ways basis the screen size; You'd rather use CSS grid over flex;

for a simple one dimensional layout flexbox can be useful to help align content

................................................................



10)-----------------------------What are combinators? give examples of how you can use them----------------------------------------------

Combinators lets you combine two or more selectors so you can be more specific in your selection method. There are different types of combinators


.
,
+
~
>
space

-Adjacent Sibling Selector (+)
Ref : https://codepen.io/nrupuld/pen/XLVyzm

The adjacent sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent element.

-General Sibling Selector (~)
The general sibling combinator (~) separates two selectors and matches the second element only if it follows the first element (though not necessarily immediately), and both are children of the same parent

former_element ~ target_element { style properties }
Ref : https://codepen.io/nrupuld/pen/pXpQLM


-Child Combinator (>)
The child combinator (>) is placed between two CSS selectors. It matches only those elements matched by the second selector that are the children of elements matched by the first.

selector1 > selector2 { style properties }
Ref : https://codepen.io/nrupuld/pen/rEpQRL

-Descendant Combinator ( )
The descendant combinator typically represented by a single space ( ) character combines two selectors such that elements matched by the second selector are selected if they have an ancestor element matching the first selector.

selector1 selector2 { style properties }
Ref : https://codepen.io/nrupuld/pen/Oezaed



10)What does object-fit do?
The object-fit CSS property sets how the content of a replaced element, such as an <img> or <video> , 
should be resized to fit its container. You can alter the alignment of the replaced element's content 
object within the element's box using the object-position property.





11)What does rotate do?
The rotate() CSS function defines a transformation that rotates an element around a fixed point
 on the 2D plane, without deforming it. Its result is a <transform-function> data type.
 The rotate() CSS function defines a transformation that rotates an element around a fixed point on the 2D plane, without deforming it. Its result is a <transform-function> data type.
The fixed point that the element rotates around — mentioned above — is also known as the transform origin. This defaults to the center of the element, but you can set your own custom
 transform origin using the transform-origin property.
syntax=rotate(a)
HTML
<div>Normal</div>
<div class="rotated">Rotated</div>
 
Copy to Clipboard
CSS
div {
  width: 80px;
  height: 80px;
  background-color: skyblue;
}

.rotated {
  transform: rotate(45deg); /* Equal to rotateZ(45deg) */
  background-color: pink;
}




13)When working with attribute selectors, how can you select elements which contain a particular attribute value?
It is possible to style HTML elements that have specific attributes or attribute valuesThe [attribute*="value"] selector is
 used to select elements whose attribute value contains a specified value. The following example selects all elements with a
  class  attribute value that contains "te": Note: The value does not have to be a whole word
[class$="test"] {
  background: yellow;
}



 14)What does @media do?
What does @media do?
The @media rule is used in media queries to apply different styles for different media types/devices.

Media queries can be used to check many things, such as:

width and height of the viewport
width and height of the device
orientation (is the tablet/phone in landscape or portrait mode?)
resolution
Using media queries are a popular technique for delivering a tailored style sheet (responsive web design) to desktops, laptops, tablets, and mobile phones.

You can also use media queries to specify that certain styles are only for printed documents or for screen readers (mediatype: print, screen, or speech).

In addition to media types, there are also media features. Media features provide more specific details to media queries, by allowing to test for a specific feature of the user agent or display device. For example, you can apply styles to only those screens that are greater, or smaller, than a certain width.e.


 16)-------------------What is the ranking of selectors with respect to specificity?-------------------
 
Ranking from Low To High

universal_selector, combinators selector, negation pseudo-class (:not) selector ( these selectors have no effects on specificity )
element selector, pseudo element selector
class selector, attribute selector, pseudo-class contained inside the overall selector
id selector
inline styling


17)----------how can we apply same styles to multiple selectors?-----------------
To group CSS selectors in a style sheet, use commas to separate multiple grouped selectors in the style. In this example, the style affects the p and div elements:
div, p { color: #f00; }


18)What are the differences between relative and absolute in CSS?
Relative positioning: The element creates its own coordinate axes, at a location offset from the viewport coordinate axis. It is Part of document flow but shifted.

Absolute positioning: An element searches for the nearest available coordinate axes among its parent elements. The element is then positioned by specifying offsets from this coordinate axis. It is removed from document normal flow.








